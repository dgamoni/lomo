// Set Grid 1170gs
/*-----------------------------------------*/

@grid-columns: 12;
@column-width: 70px;
@gutter: 30px;
@columns: 12;
@padding: @gutter / 2;

// Define Media Query Breakpoints
@bp-lg: 1200px;
@bp-md: 992px;
@bp-sm: 768px;
@bp-xs: 480px;

// Set container width relative to user variables
@width: (@column-width * @columns) + (@gutter * (@columns - 1));
@full-width-content:@column-width * @columns;

@gutter-percentage: percentage(@gutter / @width) / 2 ;

@full-columns: true;
/*
* Variable
*/
*, *:before,*:after { .borderbox(); }

.df_container-fluid {                       
    max-width: @width;
    width:100%; 
    margin: 0 auto;
    padding: 0; }

.df_row-fluid {
    position: relative;
    width: auto;
    margin-left: -@gutter-percentage;
    margin-right: -@gutter-percentage;
    *zoom: 1; 
    &:before,&:after {
        display: table;
        content: ""; }
    &:after {
        clear: both; }
    [class*="df_span-"] {
        display: block;
        width: 100%;
        min-height: 28px;
        .borderbox();
        float: left;
        padding-left: @gutter-percentage;
        padding-right: @gutter-percentage;
  // &:first-child {
  //   margin-left: 0; }
        &.right { float: right; }
        &.right:first-child {
            margin-left: @gutter-percentage; }
        &.right:last-child {
            margin-left: 0; }
        &.hide { display: none; }
    }
    .full-width-content & [class*="df_span-"] {
        padding-left: 0;
        padding-right: 0; }


// .generate-columns(12);

// .generate-columns(@n, @i: 1) when (@i =< @n) {
//   @grid: (@column-width * @i) + (@gutter * (@i - 1));
//   @grid-full: (@column-width * @i) ;
//   .df_span@{i} {
//     width: (@grid / @width) * 100%;
//   }   
//   .full-width-content& when (@full-columns = true) {
//     .df_span@{i} {
//       width: (@grid-full / @full-width-content) * 100%;
//     }
//   }
//   .generate-columns(@n, (@i + 1));
// }

    .df_calc-grid-column(@index, @class, @type) when (@type = width) and (@index > 0) {
      @grid: (@column-width * @index) + (@gutter * (@index - 1));
        .df_span-@{class}-@{index} {
            width: percentage((@index / @grid-columns));
        }
    }

    .df_calc-grid-column(@index, @class, @type) when (@type = offset) {
        @grid: (@column-width * @index) + (@gutter * (@index - 1));
        .df_span-@{class}-offset-@{index} {
           margin-left: percentage( @index / @grid-columns );
        }
    }

    .df_calc-grid-column(@index, @class, @type) when (@type = full-width) and (@index > 0) {
      @grid: (@column-width * @index) + (@gutter * (@index - 1));
        .full-width-content& .df_span-@{class}-@{index} {
            width: percentage((@index / @grid-columns));
        }
    }

    // Basic looping in LESS
    .df_loop-grid-columns(@index, @class, @type) when (@index >= 1) {
        .df_calc-grid-column(@index, @class, @type);
        // next iteration
        .df_loop-grid-columns((@index - 1), @class, @type);
    }

    // Create grid for specific class
    .df_make-grid(@class) {
        .df_loop-grid-columns(@grid-columns, @class, width);
        .df_loop-grid-columns(@grid-columns, @class, offset);
        .df_loop-grid-columns(@grid-columns, @class, full-width);
    }

    .df_make-grid(xs);

    @media only screen and (min-width: @bp-sm) {
    .df_make-grid(sm);

      //xtra
      .df_span-col5{ 
        width: 17.948%; 
      }
    }

    @media only screen and (min-width: @bp-md) {
    .df_make-grid(md);

     //xtra
      .df_span-col5{ 
        width: 17.948%; 
      }
    }

    @media only screen and (min-width: @bp-lg){
    .df_make-grid(lg);

     //xtra
      .df_span-col5{ 
        width: 17.948%; 
      }
    }

// @media (max-width: 768px) {
//     div[class*="df_span"], .full-width-content& div[class*="df_span"] {
//     float: none;
//     display: block;
//     width: auto;
//     margin-left: 0;
//     }
// }

    .wpb_content_element {
      margin-bottom: 22px;
    }

} // End df_row-fluid

/* Visibility */
.visible-sm,.visible-tl,.visible-dt{display:none}
@media screen and (max-width:@bp-sm){
  .hidden-sm{display:none!important;}
  .visible-sm{display:block!important;}
}
@media only screen and (min-device-width:@bp-sm) and (max-device-width:@bp-md){
  .hidden-tl{display:none!important;}
  .visible-tl{display:block!important;}
}
@media only screen and (min-width:@bp-lg){
  .hidden-dt{display:none!important;}
  .visible-dt{display:block!important;}
}
@media only screen and (min-device-width:320px) and (max-device-width:480px){
  .no-smartphone{display:none!important;}
}
@media only screen and (min-device-width:768px) and (max-device-width:1024px){
  .no-ipad{display:none!important;}
}
@media only screen and (-webkit-min-device-pixel-ratio:1.5), only screen and (min-device-pixel-ratio:1.5){
  .no-iphone{display:none!important;}
}

/* Clear Floats */
.clear {
    clear: both;
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0; }

.clearfix{
  *zoom: 1;
  &:after{
    clear: both; }
  &:before, &:after {
    display: table;
    line-height: 0;
    content: ""; }
}

.col-full {
	*zoom:1;
	&:after{
		content: ".";
		display: block;
		height: 0;
		clear: both;
		visibility: hidden; }
  &:before,&:after {
  	content: "\0020";
    display: block;
    height: 0;
    overflow: hidden;
  }
}